Description:
  This template deploys a very simple VPC along with the security groups required
  to run a EMR cluster.

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: prd

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.192.0.0/16

  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.192.10.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone:
         Fn::Select:
         - 0
         - Fn::GetAZs: {Ref: 'AWS::Region'}
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  NoIngressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub no-ingress-sg-${AWS::StackName}-${EnvironmentName}
      GroupDescription: "Security group with no ingress rule"
      VpcId: !Ref VPC

  EmrManagedMasterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub emr-master-sg-${AWS::StackName}-${EnvironmentName}
      GroupDescription: "Security group for master emr nodes"
      VpcId: !Ref VPC
  
  EmrManagedSlaveSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub emr-slave-sg-${AWS::StackName}-${EnvironmentName}
      GroupDescription: "Security group for worker / slave emr nodes"
      VpcId: !Ref VPC

  EmrMasterSGIngressRule1:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: 
      - EmrManagedMasterSecurityGroup
    Properties:
      GroupId: !Ref EmrManagedMasterSecurityGroup
      IpProtocol: tcp
      FromPort: 0
      ToPort: 65535
      SourceSecurityGroupId: !Ref EmrManagedMasterSecurityGroup

  EmrMasterSGIngressRule2:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: 
      - EmrManagedMasterSecurityGroup
      - EmrManagedSlaveSecurityGroup
    Properties:
      GroupId: !Ref EmrManagedMasterSecurityGroup
      IpProtocol: tcp
      FromPort: 0
      ToPort: 65535
      SourceSecurityGroupId: !Ref EmrManagedSlaveSecurityGroup

  EmrSlaveSGIngressRule1:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: 
      - EmrManagedSlaveSecurityGroup
    Properties:
      GroupId: !Ref EmrManagedSlaveSecurityGroup
      IpProtocol: tcp
      FromPort: 0
      ToPort: 65535
      SourceSecurityGroupId: !Ref EmrManagedSlaveSecurityGroup

  EmrSlaveSGIngressRule2:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: 
      - EmrManagedMasterSecurityGroup
      - EmrManagedSlaveSecurityGroup
    Properties:
      GroupId: !Ref EmrManagedSlaveSecurityGroup
      IpProtocol: tcp
      FromPort: 0
      ToPort: 65535
      SourceSecurityGroupId: !Ref EmrManagedMasterSecurityGroup

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref VPC

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [ ",", [ !Ref PublicSubnet1 ]]

  PublicSubnet1:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref PublicSubnet1

  NoIngressSecurityGroup:
    Description: Security group with no ingress rule
    Value: !Ref NoIngressSecurityGroup

  EmrManagedMasterSecurityGroup:
    Description: Security group for the master nodes of the EMR cluster
    Value: !Ref EmrManagedMasterSecurityGroup

  EmrManagedSlaveSecurityGroup:
    Description: Security group for the slave nodes of the EMR cluster no access to port 22 from outside world.
    Value: !Ref EmrManagedSlaveSecurityGroup
